using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Project_1
{
    class Program
    {
        static void Main(string[] args)
        {
            RulePrint();
            Console.Write("Please choose difficulty level (recomended 1-4): ");
            int size = Convert.ToInt32(Console.ReadLine());
            if (size > 4)
            {
                Console.WriteLine("I wonder are you brave or just a fool? well it's you funeral.");
            }
            string[] stringBank = new string[size * size / 2];
            string[,] gameBoard = BoardMaker(size, stringBank);
            char[,] printBoard = PrintMaker(size);
            Console.ReadKey();
            
        }

        // Prints the rules for the game

        private static void RulePrint()
        {
            Console.WriteLine("Welcome to the Memory Cards game, 2 player edition.");
            Console.WriteLine();
            Console.WriteLine("Stage One: Setting the Board");
            Console.WriteLine("Choose difficulty level 1-4, the difficulty level will determine the game board's size.");
            Console.WriteLine("Input as many strings as neccesary to make cards, each card may contain up to nine characters.");
            Console.WriteLine("Each card will have 2 copies placed in a random spot on the board.");
            Console.WriteLine();
            Console.WriteLine("Stage Two: ");
        }

        // receives string from the user and places 2 copies of it in random null cells inside array

        static string[,] BoardMaker(int size,string[] stringBank)
        {
            int cardCounter = 0;
            string[,] newBoard = new string[size * 2, size * 2];
            for (int rowCount = 0; rowCount < (newBoard.GetLength(0)/2); rowCount++)
            {
                for (int colCount = 0; colCount < newBoard.GetLength(1); colCount++)
                {
                    Console.Write($"Please enter the string for card set number {cardCounter+1} (NOTE: maximum length is nine characters): ");
                    string card = Console.ReadLine();
                    if (card.Length > 10)
                    {
                        card = card.Substring(0,9);
                    }
                    stringBank[cardCounter] = card;
                    int[] cell = CellNumberGenerator(newBoard);
                    newBoard[cell[0], cell[1]] = card;
                    cell = CellNumberGenerator(newBoard);
                }
            }
            return newBoard;
        }

        // chooses a random cell number on the board

        private static int[] CellNumberGenerator(string[,] newBoard)
        {
            Random random = new Random();
            int[] cellRandom = { random.Next(0,newBoard.GetLength(0)), random.Next(0,newBoard.GetLength(1))};
            if (newBoard[cellRandom[0], cellRandom[1]] == null)
            {
                return cellRandom;
            }
            else
            {
                cellRandom = CellNumberGenerator( newBoard);
            }
            return cellRandom;
        }

        // Creates the Array used for printing on screen

        static char [,] PrintMaker(int size)
        {
            char[,] PrintArray = new char[size * 2, size * 2];
            for (int rowCounter = 0; rowCounter < PrintArray.GetLength(0); rowCounter++)
            {
                for (int colCounter = 0; colCounter < PrintArray.GetLength(1); colCounter++)
                {
                    PrintArray[rowCounter, colCounter] = 'x';
                }
            }
            return PrintArray;
        }
    }
}
